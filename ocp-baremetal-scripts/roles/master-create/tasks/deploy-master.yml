  - name: Create the Master Instance
    os_server:
      cloud: ocpcloud
      api_timeout: 300
      timeout: 300
      name: master{{ item }}.{{ domain_name }}
      image: "{{ master_image }}"
      state: "{{ provision_state }}" 
      meta: "group={{ group }},cluster_name={{ ocp_cluster_name }},role=ocp_master"
      flavor: "{{ master_flavor }}"
      security_groups: "{{ master_security_group }}"
      key_name: "{{ ocp_key }}"
      auto_ip: true
      wait: yes
      nics:
      - net-name: "{{ ocp_network }}"
      userdata: |
         #cloud-config
         write_files:
         - path: "/etc/sysconfig/docker-storage-setup"
           permissions: "0644"
           owner: "root"
           content: |
             DEVS='/dev/vdb'
             VG=docker_vol
             DATA_SIZE=95%VG
             STORAGE_DRIVER=overlay2
             CONTAINER_ROOT_LV_NAME=dockerlv
             CONTAINER_ROOT_LV_MOUNT_PATH=/var/lib/docker
             CONTAINER_ROOT_LV_SIZE=100%FREE
         runcmd:
         - mkdir -p /var/lib/origin/openshift.local.volumes
         - mkdir -p /var/lib/etcd
         - curl -o /tmp/ose.repo http://192.0.2.252/repo/ose.repo
         - cp /tmp/ose.repo /etc/yum.repos.d/ose.repo
    register: newnodes
    with_sequence: 
         count="{{ master_count }}"
  - add_host: name="{{ item.server.public_v4 }}"
              groups=created_master_nodes
              ansible_user=cloud-user
              ansible_ssh_private_key_file=/home/cloud-user/openstack.pem
              instance_name="{{ item.server.name }}"  
    with_items: "{{ newnodes.results }}"
  - name: "Wait for SSH banners"
    local_action: wait_for port=22 host="{{ inventory_hostname }}" search_regex=OpenSSH delay=5
    become: False
  - name: Create the docker-storage Volumes for the Mater Nodes
    os_volume:
      state: present
      cloud: "{{ cloud_name }}"
      size: "{{ docker_storage_size }}"
      display_name: docker-storage-{{ hostvars[item].instance_name }}
    with_items: "{{ groups['created_master_nodes'] }}"
  - name: Create the OpenShift Local Volumes for the Mater Nodes
    os_volume:
      state: present
      cloud: "{{ cloud_name }}"
      size: "{{ openshift_local_stor_size }}"
      display_name: openshift-local-{{ hostvars[item].instance_name }}
    with_items: "{{ groups['created_master_nodes'] }}"
  - name: Create the etcd  Volumes for the Mater Nodes
    os_volume:
      state: present
      cloud: "{{ cloud_name }}"
      size: "{{ etcd_stor_size }}"
      display_name: etcd-{{ hostvars[item].instance_name }}
    with_items: "{{ groups['created_master_nodes'] }}"
  - name: Attach docker-storage volume to the master
    os_server_volume:
      state: present
      cloud: "{{ cloud_name }}"
      server: "{{ hostvars[item].instance_name }}"
      volume: docker-storage-{{ hostvars[item].instance_name }}
      api_timeout: 300
      device: /dev/vdb
    with_items: "{{ groups['created_master_nodes'] }}"
  - name: Attach OpenShift Local volume to the master
    os_server_volume:
      state: present
      cloud: "{{ cloud_name }}"
      server: "{{ hostvars[item].instance_name }}"
      volume: openshift-local-{{ hostvars[item].instance_name }}
      api_timeout: 300
      device: /dev/vdc
    with_items: "{{ groups['created_master_nodes'] }}"
  - name: Attach etcd volume to the master
    os_server_volume:
      state: present
      cloud: "{{ cloud_name }}"
      server: "{{ hostvars[item].instance_name }}"
      volume: etcd-{{ hostvars[item].instance_name }}
      api_timeout: 300
      device: /dev/vdd
    with_items: "{{ groups['created_master_nodes'] }}"
  - name: Create or Update the DNS A record for the master server  
    nsupdate:
     key_name: "{{ nsupdate_key }}"
     key_secret: "{{ nsupdate_secret }}"
     server: "{{ dns_server }}"
     key_algorithm: "{{ key_algorithm }}"
     zone: "{{ domain_name }}"
     record: "{{ hostvars[item].instance_name }}"
     value: "{{ hostvars[item].inventory_hostname }}"
    with_items: "{{ groups['created_master_nodes'] }}"
