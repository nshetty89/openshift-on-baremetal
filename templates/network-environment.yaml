resource_registry:
  #OS::TripleO::BlockStorage::Net::SoftwareConfig: /home/stack/network/config/single-nic-vlans/cinder-storage.yaml
  #OS::TripleO::Compute::Net::SoftwareConfig: /home/stack/network/config/single-nic-vlans/compute.yaml
  #OS::TripleO::Controller::Net::SoftwareConfig: /home/stack/network/config/single-nic-vlans/controller.yaml
  #OS::TripleO::ObjectStorage::Net::SoftwareConfig: /home/stack/network/config/single-nic-vlans/swift-storage.yaml
  #OS::TripleO::CephStorage::Net::SoftwareConfig: /home/stack/network/config/single-nic-vlans/ceph-storage.yaml

parameter_defaults:
  # Customize all these values to match the local environment
  InternalApiNetCidr: 172.17.0.0/24
  StorageNetCidr: 172.17.1.0/24
  StorageMgmtNetCidr: 172.17.3.0/24
  TenantNetCidr: 172.17.2.0/24
  ExternalNetCidr: 172.17.6.0/24
  ManagementNetCidr: 172.17.4.0/24
  # CIDR subnet mask length for provisioning network
  ControlPlaneSubnetCidr: '24'
  InternalApiAllocationPools: [{'start': '172.17.0.4', 'end': '172.17.0.250'}]
  StorageAllocationPools: [{'start': '172.17.1.4', 'end': '172.17.1.250'}]
  StorageMgmtAllocationPools: [{'start': '172.17.3.4', 'end': '172.17.3.250'}]
  TenantAllocationPools: [{'start': '172.17.2.4', 'end': '172.17.2.200'}]
  ManagementAllocationPools: [{'start': '172.17.4.4', 'end': '172.17.4.200'}]
  # Use an External allocation pool which will leave room for floatingBo IPs
  ExternalAllocationPools: [{'start': '172.17.6.40', 'end': '172.17.6.60'}]
  # Set to the router gateway on the external network
  ExternalInterfaceDefaultRoute: 172.17.6.254
  # Gateway router for the provisioning network (or Undercloud IP)
  ControlPlaneDefaultRoute: 172.16.0.2
  # Generally the IP of the Undercloud
  EC2MetadataIp: 172.16.0.2
  # Define the DNS servers (maximum 2) for the overcloud nodes
  DnsServers: ["8.8.8.8","8.8.4.4"]
  InternalApiNetworkVlanID: 201
  StorageNetworkVlanID: 202
  StorageMgmtNetworkVlanID: 203
  TenantNetworkVlanID: 204
  ManagementNetworkVlanID: 205
  ExternalNetworkVlanID: 100
  # May set to br-ex if using floating IPs only on native VLAN on bridge br-ex
  NeutronExternalNetworkBridge: "''"
  NeutronNetworkType: 'vxlan,vlan,flat'
  NeutronTunnelTypes: 'vxlan'
  # Customize bonding options if required (ignored if bonds are not used)
  #BondInterfaceOvsOptions: 'mode=1'
